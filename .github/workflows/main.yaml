# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

on:
  push:
    branches: [ 'main' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PUBLISH_TO_DOCKER: true
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

#      - name: Run cucumber tests
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: cucumber

      - name: Create release with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: releaseVersion --no-commit

      - name: Print version with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: printVersion

      - name: build image and publish
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jib

      - name: Commit release
        run: |
          git config --global push.followTags true
          git push

      - name: Retrieve version
        id: version
        run: |
          echo "APP_VERSION=$(./gradlew getCurrentVersionNoHash | grep -v -e '^$\|^>\|^BUILD\|^1')" >> $GITHUB_ENV

#      - name: Install flyctl via https://github.com/superfly/flyctl-actions
#        uses: superfly/flyctl-actions/setup-flyctl@master
#
#      - name: Deploy our Spring Boot app to fly.io
#        run: flyctl deploy --image ghcr.io/digissance/homie-demo:${{ env.APP_VERSION }}
